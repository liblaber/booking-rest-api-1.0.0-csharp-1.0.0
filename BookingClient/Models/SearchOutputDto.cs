// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace BookingClient.Models;

public record SearchOutputDto(
    /// <value>A signed integer number that uniquely identifies an accommodation property.</value>
    [property: JsonPropertyName("id"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        long? Id = null,
    /// <value>A three-letter code that uniquely identifies a monetary currency as defined by the ISO 4217 standard.</value>
    [property:
        JsonPropertyName("currency"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Currency = null,
    /// <value>Deep link mobile app URL.</value>
    [property:
        JsonPropertyName("deep_link_url"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? DeepLinkUrl = null,
    /// <value>Internet address for the property page on Booking.com.</value>
    [property:
        JsonPropertyName("url"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Url = null,
    /// <value>
    /// The price components of this product or selection of products.
    /// 'base' and 'extra_charges' are returned only when explicitly requested (via 'extras=extra_charges').
    /// </value>
    [property:
        JsonPropertyName("price"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        PriceDataDtoDouble? Price = null,
    [property:
        JsonPropertyName("products"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<ProductDto>? Products = null
);
