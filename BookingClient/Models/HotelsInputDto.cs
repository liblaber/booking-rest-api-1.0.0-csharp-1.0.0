// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using BookingClient.Json;

namespace BookingClient.Models;

public record HotelsInputDto(
    /// <value>A list of up to 1000 hotel ids.</value>
    [property:
        JsonPropertyName("hotel_ids"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? HotelIds = null,
    /// <value>
    /// The language code to return the results in.
    /// Please check the "Possible Values" section of the documentation for the accepted language codes.
    /// </value>
    [property:
        JsonPropertyName("language"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        HotelsInputDto.HotelsInputDtoLanguage? Language = null,
    /// <value>Returns extra bits of information about hotels.</value>
    [property:
        JsonPropertyName("extras"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<HotelsInputDto.HotelsInputDtoExtras>? Extras = null,
    /// <value>The number of rows to offset the results by. NOTE: this needs to be 0 or a multiple of 100.</value>
    [property:
        JsonPropertyName("offset"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Offset = null,
    /// <value>The maximum number of rows to return. NOTE: this needs to be a multiple of 100.</value>
    [property:
        JsonPropertyName("rows"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Rows = null
)
{
    /// <summary>
    /// The language code to return the results in.
    /// Please check the "Possible Values" section of the documentation for the accepted language codes.
    /// </summary>
    public record HotelsInputDtoLanguage : ValueEnum<string>
    {
        internal HotelsInputDtoLanguage(string value)
            : base(value) { }

        public HotelsInputDtoLanguage()
            : base("AR") { }

        public static HotelsInputDtoLanguage Ar = new("AR");
        public static HotelsInputDtoLanguage Bg = new("BG");
        public static HotelsInputDtoLanguage Ca = new("CA");
        public static HotelsInputDtoLanguage Cs = new("CS");
        public static HotelsInputDtoLanguage Da = new("DA");
        public static HotelsInputDtoLanguage De = new("DE");
        public static HotelsInputDtoLanguage El = new("EL");
        public static HotelsInputDtoLanguage En = new("EN");
        public static HotelsInputDtoLanguage EnGb = new("EN_GB");
        public static HotelsInputDtoLanguage EnUs = new("EN_US");
        public static HotelsInputDtoLanguage Es = new("ES");
        public static HotelsInputDtoLanguage EsAr = new("ES_AR");
        public static HotelsInputDtoLanguage EsMx = new("ES_MX");
        public static HotelsInputDtoLanguage Et = new("ET");
        public static HotelsInputDtoLanguage Fi = new("FI");
        public static HotelsInputDtoLanguage Fr = new("FR");
        public static HotelsInputDtoLanguage He = new("HE");
        public static HotelsInputDtoLanguage Hi = new("HI");
        public static HotelsInputDtoLanguage Hr = new("HR");
        public static HotelsInputDtoLanguage Hu = new("HU");
        public static HotelsInputDtoLanguage Id = new("ID");
        public static HotelsInputDtoLanguage Is_ = new("IS");
        public static HotelsInputDtoLanguage It = new("IT");
        public static HotelsInputDtoLanguage Ja = new("JA");
        public static HotelsInputDtoLanguage Ka = new("KA");
        public static HotelsInputDtoLanguage Ko = new("KO");
        public static HotelsInputDtoLanguage Lt = new("LT");
        public static HotelsInputDtoLanguage Lv = new("LV");
        public static HotelsInputDtoLanguage Ms = new("MS");
        public static HotelsInputDtoLanguage Nl = new("NL");
        public static HotelsInputDtoLanguage No = new("NO");
        public static HotelsInputDtoLanguage Pl = new("PL");
        public static HotelsInputDtoLanguage PtBr = new("PT_BR");
        public static HotelsInputDtoLanguage PtPt = new("PT_PT");
        public static HotelsInputDtoLanguage Ro = new("RO");
        public static HotelsInputDtoLanguage Ru = new("RU");
        public static HotelsInputDtoLanguage Sk = new("SK");
        public static HotelsInputDtoLanguage Sl = new("SL");
        public static HotelsInputDtoLanguage Sr = new("SR");
        public static HotelsInputDtoLanguage Sv = new("SV");
        public static HotelsInputDtoLanguage Th = new("TH");
        public static HotelsInputDtoLanguage Tl = new("TL");
        public static HotelsInputDtoLanguage Tr = new("TR");
        public static HotelsInputDtoLanguage Uk = new("UK");
        public static HotelsInputDtoLanguage Vi = new("VI");
        public static HotelsInputDtoLanguage ZhCn = new("ZH_CN");
        public static HotelsInputDtoLanguage ZhTw = new("ZH_TW");
    }

    /// <summary>Returns extra bits of information about hotels.</summary>
    public record HotelsInputDtoExtras : ValueEnum<string>
    {
        internal HotelsInputDtoExtras(string value)
            : base(value) { }

        public HotelsInputDtoExtras()
            : base("HOTEL_INFO") { }

        public static HotelsInputDtoExtras HotelInfo = new("HOTEL_INFO");
        public static HotelsInputDtoExtras RoomInfo = new("ROOM_INFO");
        public static HotelsInputDtoExtras KeyCollectionInfo = new("KEY_COLLECTION_INFO");
        public static HotelsInputDtoExtras HotelFacilities = new("HOTEL_FACILITIES");
        public static HotelsInputDtoExtras HotelPhotos = new("HOTEL_PHOTOS");
        public static HotelsInputDtoExtras HotelDescription = new("HOTEL_DESCRIPTION");
    }
}
