// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using BookingClient.Json;

namespace BookingClient.Models;

public record ChargeDto(
    [property:
        JsonPropertyName("charge"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Charge = null,
    [property:
        JsonPropertyName("condition"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Condition = null,
    [property:
        JsonPropertyName("mode"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        ChargeDto.Mode? Mode_ = null,
    [property:
        JsonPropertyName("percentage"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? Percentage = null,
    [property:
        JsonPropertyName("total_amount"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? TotalAmount = null,
    [property:
        JsonPropertyName("unit_amount"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        double? UnitAmount = null
)
{
    public record Mode : ValueEnum<string>
    {
        internal Mode(string value)
            : base(value) { }

        public Mode()
            : base("CALCULATED_AMOUNT") { }

        public static Mode CalculatedAmount = new("CALCULATED_AMOUNT");
        public static Mode Incalculable = new("INCALCULABLE");
        public static Mode Percentage = new("PERCENTAGE");
        public static Mode PerNight = new("PER_NIGHT");
        public static Mode PerPersonPerNight = new("PER_PERSON_PER_NIGHT");
        public static Mode PerPersonPerStay = new("PER_PERSON_PER_STAY");
        public static Mode PerStay = new("PER_STAY");
    }
}
