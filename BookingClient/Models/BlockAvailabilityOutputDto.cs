// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace BookingClient.Models;

public record BlockAvailabilityOutputDto(
    /// <value>
    /// The object containing all the relevant information for the combination of room, policy, meal and occupancy that determines the price."
    /// A block is the unique entity you book with booking.com.
    /// </value>
    [property:
        JsonPropertyName("block"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<BlockOutputDto>? Block = null,
    /// <value>Boolean value set to "true" if payment can be made during reservation process or "false" if it can not.</value>
    [property:
        JsonPropertyName("can_pay_now"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? CanPayNow = null,
    /// <value>The date that was searched for as checkin. Format: YYYY-MM-DD</value>
    [property:
        JsonPropertyName("checkin"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Checkin = null,
    /// <value>The date that was searched for as checkout. Format: YYYY-MM-DD</value>
    [property:
        JsonPropertyName("checkout"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Checkout = null,
    /// <value>Boolean value set to "true" if the direct payment is available or "false" if it is not.</value>
    [property:
        JsonPropertyName("direct_payment"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? DirectPayment = null,
    /// <value>Booking.com hotel ID. The unique identifier of this hotel.</value>
    [property:
        JsonPropertyName("hotel_id"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? HotelId = null,
    /// <value>URL of the hotel's page on Booking.com.</value>
    [property:
        JsonPropertyName("hotel_url"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? HotelUrl = null,
    [property:
        JsonPropertyName("isFlashDeal"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? IsFlashDeal = null,
    [property:
        JsonPropertyName("flash_deal"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        bool? FlashDeal = null
);
