// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using BookingClient.Json;

namespace BookingClient.Models;

/// <summary>The list of room types available at this property. Requires `{"extras":["rooms"]}`.</summary>
public record RoomDto(
    /// <value>A signed integer number that uniquely identifies an accommodation property room.</value>
    [property: JsonPropertyName("id"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        long? Id = null,
    /// <value>Translated description of this room. The maximum number of characters returned may be limited by contract.</value>
    [property:
        JsonPropertyName("name"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        TranslatedString? Name = null,
    /// <value>Lists a set of attribute qualifiers for this room. Will not be returned if no relevant attributes are applicable.</value>
    [property:
        JsonPropertyName("attributes"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<RoomDto.RoomDtoAttributes>? Attributes = null,
    /// <value>Lists all possible bedding options for this room or apartment.</value>
    [property:
        JsonPropertyName("bed_options"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<BedOptionDto>? BedOptions = null,
    /// <value>Lists room options regarding adding cribs and/or extra beds.</value>
    [property:
        JsonPropertyName("cribs_and_extra_beds"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        CribsAndExtraBedsDto? CribsAndExtraBeds = null,
    /// <value>Translated description of this room. The maximum number of characters returned may be limited by contract.</value>
    [property:
        JsonPropertyName("description"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        TranslatedString? Description = null,
    /// <value>
    /// A signed integer number that uniquely identifies an accommodation property room facility.
    /// Examples of facilities are: Coffee/Tea maker, TV, Airconditioning, etc.
    /// </value>
    [property:
        JsonPropertyName("facilities"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? Facilities = null,
    /// <value>Occupancy limits and options.</value>
    [property:
        JsonPropertyName("maximum_occupancy"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        RoomMaximumOccupancyDto? MaximumOccupancy = null,
    /// <value>Total rooms available.</value>
    [property:
        JsonPropertyName("number_of_rooms"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        NumberOfRoomsDto? NumberOfRooms = null,
    /// <value>
    /// A signed integer number that uniquely identifies an accommodation property room type.
    /// Example of room types are: Suite, Apartment, Twin/Double etc.
    /// </value>
    [property:
        JsonPropertyName("room_type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? RoomType = null,
    /// <value>The room area in square meters.</value>
    [property:
        JsonPropertyName("size"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Size = null
)
{
    /// <summary>Lists a set of attribute qualifiers for this room. Will not be returned if no relevant attributes are applicable.</summary>
    public record RoomDtoAttributes : ValueEnum<string>
    {
        internal RoomDtoAttributes(string value)
            : base(value) { }

        public RoomDtoAttributes()
            : base("NON_SMOKING") { }

        public static RoomDtoAttributes NonSmoking = new("NON_SMOKING");
        public static RoomDtoAttributes WorkFriendly = new("WORK_FRIENDLY");
    }
}
