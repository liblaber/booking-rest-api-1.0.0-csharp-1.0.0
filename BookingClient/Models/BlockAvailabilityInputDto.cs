// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using BookingClient.Json;

namespace BookingClient.Models;

public record BlockAvailabilityInputDto(
    /// <value>Hotel ID(s) to check availability for.</value>
    [property: JsonPropertyName("hotel_ids")]
        List<long> HotelIds,
    /// <value>The arrival date.</value>
    [property: JsonPropertyName("checkin")]
        string Checkin,
    /// <value>The departure date. Must be later than (checkin).</value>
    [property: JsonPropertyName("checkout")]
        string Checkout,
    /// <value>Guest country code. Used to accurately display the best prices and price details for people from that country.</value>
    [property: JsonPropertyName("guest_cc")]
        string GuestCc,
    /// <value>Returns the prices in this currency, in addition to the hotel currency.</value>
    [property:
        JsonPropertyName("currency"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Currency = null,
    /// <value>The extra items for this request. See the documentation for more details about each extra.</value>
    [property:
        JsonPropertyName("extras"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<BlockAvailabilityInputDto.BlockAvailabilityInputDtoExtras>? Extras = null,
    /// <value>Application affiliate id</value>
    [property:
        JsonPropertyName("affiliate_id"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? AffiliateId = null,
    /// <value>Return only availability hits with these particular block IDs</value>
    [property:
        JsonPropertyName("block_ids"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<string>? BlockIds = null,
    /// <value>
    /// Guest IP address for determining guest country
    /// and showing the best price for that user and obeying laws regarding the display of taxes and fees.
    /// </value>
    [property:
        JsonPropertyName("guest_ip"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? GuestIp = null,
    /// <value>
    /// Number of guests for which blocks will be found.
    /// The total number of guests is used for calculating city tax charges.
    /// It is specified as an array of guest numbers.
    ///
    /// If you use this parameter and make bookings through the API,
    /// you should also set the exact same value in the guest_quantities parameter
    /// for the processBooking call, otherwise per-person included charges may result in
    /// pricing problems, causing the booking to fail.
    ///
    /// NOTE: After version 2.6 either this or `room1` needs to be provided.
    /// </value>
    [property:
        JsonPropertyName("guest_qty"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? GuestQty = null,
    /// <value>
    /// Specify the language for: block_id, policies, room texts and hotel descriptions.
    ///
    /// Note: not all text is translated in all languages.
    /// Please check the "Possible Values" section of the documentation for the accepted language codes.
    /// </value>
    [property:
        JsonPropertyName("language"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        BlockAvailabilityInputDto.BlockAvailabilityInputDtoLanguage? Language = null,
    /// <value>Takes a number of rooms to put guests into</value>
    [property:
        JsonPropertyName("num_rooms"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? NumRooms = null,
    /// <value>
    /// Which guests to put in which rooms. Syntax: comma-separated list, `A` for each adult, a number in the range 0..17 for each child.
    /// </value>
    [property:
        JsonPropertyName("room1"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<string>? Room1 = null,
    /// <value>The user's platform.</value>
    [property:
        JsonPropertyName("user_platform"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        BlockAvailabilityInputDto.BlockAvailabilityInputDtoUserPlatform? UserPlatform = null
)
{
    /// <summary>The extra items for this request. See the documentation for more details about each extra.</summary>
    public record BlockAvailabilityInputDtoExtras : ValueEnum<string>
    {
        internal BlockAvailabilityInputDtoExtras(string value)
            : base(value) { }

        public BlockAvailabilityInputDtoExtras()
            : base("ADDON_TYPE") { }

        public static BlockAvailabilityInputDtoExtras AddonType = new("ADDON_TYPE");
        public static BlockAvailabilityInputDtoExtras NetPrice = new("NET_PRICE");
        public static BlockAvailabilityInputDtoExtras RackRates = new("RACK_RATES");
        public static BlockAvailabilityInputDtoExtras MaxRoomsInReservation =
            new("MAX_ROOMS_IN_RESERVATION");
        public static BlockAvailabilityInputDtoExtras SmokingStatus = new("SMOKING_STATUS");
        public static BlockAvailabilityInputDtoExtras ImportantInformation =
            new("IMPORTANT_INFORMATION");
        public static BlockAvailabilityInputDtoExtras AllExtraCharges = new("ALL_EXTRA_CHARGES");
        public static BlockAvailabilityInputDtoExtras AdditionalRoomInfo =
            new("ADDITIONAL_ROOM_INFO");
        public static BlockAvailabilityInputDtoExtras GroupRecommendations =
            new("GROUP_RECOMMENDATIONS");
        public static BlockAvailabilityInputDtoExtras RoomTypeId = new("ROOM_TYPE_ID");
        public static BlockAvailabilityInputDtoExtras CcRequired = new("CC_REQUIRED");
        public static BlockAvailabilityInputDtoExtras ShowConditionalCharges =
            new("SHOW_CONDITIONAL_CHARGES");
        public static BlockAvailabilityInputDtoExtras PostcardPhoto = new("POSTCARD_PHOTO");
        public static BlockAvailabilityInputDtoExtras ExtraCharges = new("EXTRA_CHARGES");
        public static BlockAvailabilityInputDtoExtras Photos = new("PHOTOS");
        public static BlockAvailabilityInputDtoExtras Internet = new("INTERNET");
        public static BlockAvailabilityInputDtoExtras IfDomesticNoCc = new("IF_DOMESTIC_NO_CC");
        public static BlockAvailabilityInputDtoExtras Facilities = new("FACILITIES");
        public static BlockAvailabilityInputDtoExtras ExtraBeds = new("EXTRA_BEDS");
        public static BlockAvailabilityInputDtoExtras CancellationInfo = new("CANCELLATION_INFO");
        public static BlockAvailabilityInputDtoExtras Mealplans = new("MEALPLANS");
        public static BlockAvailabilityInputDtoExtras DealLastm = new("DEAL_LASTM");
        public static BlockAvailabilityInputDtoExtras PaymentTerms = new("PAYMENT_TERMS");
        public static BlockAvailabilityInputDtoExtras AllPrices = new("ALL_PRICES");
        public static BlockAvailabilityInputDtoExtras BlockPaymentOptions =
            new("BLOCK_PAYMENT_OPTIONS");
        public static BlockAvailabilityInputDtoExtras MaxChildrenFreeAge =
            new("MAX_CHILDREN_FREE_AGE");
        public static BlockAvailabilityInputDtoExtras NumberOfRoomsLeft =
            new("NUMBER_OF_ROOMS_LEFT");
        public static BlockAvailabilityInputDtoExtras MaxChildrenFree = new("MAX_CHILDREN_FREE");
        public static BlockAvailabilityInputDtoExtras Policies = new("POLICIES");
        public static BlockAvailabilityInputDtoExtras PrepaymentInfo = new("PREPAYMENT_INFO");
        public static BlockAvailabilityInputDtoExtras DealFlash = new("DEAL_FLASH");
        public static BlockAvailabilityInputDtoExtras IfNoCcAllowed = new("IF_NO_CC_ALLOWED");
        public static BlockAvailabilityInputDtoExtras DealSmart = new("DEAL_SMART");
        public static BlockAvailabilityInputDtoExtras Addons = new("ADDONS");
        public static BlockAvailabilityInputDtoExtras AddressRequired = new("ADDRESS_REQUIRED");
    }

    /// <summary>
    /// Specify the language for: block_id, policies, room texts and hotel descriptions.
    ///
    /// Note: not all text is translated in all languages.
    /// Please check the "Possible Values" section of the documentation for the accepted language codes.
    /// </summary>
    public record BlockAvailabilityInputDtoLanguage : ValueEnum<string>
    {
        internal BlockAvailabilityInputDtoLanguage(string value)
            : base(value) { }

        public BlockAvailabilityInputDtoLanguage()
            : base("AR") { }

        public static BlockAvailabilityInputDtoLanguage Ar = new("AR");
        public static BlockAvailabilityInputDtoLanguage Bg = new("BG");
        public static BlockAvailabilityInputDtoLanguage Ca = new("CA");
        public static BlockAvailabilityInputDtoLanguage Cs = new("CS");
        public static BlockAvailabilityInputDtoLanguage Da = new("DA");
        public static BlockAvailabilityInputDtoLanguage De = new("DE");
        public static BlockAvailabilityInputDtoLanguage El = new("EL");
        public static BlockAvailabilityInputDtoLanguage En = new("EN");
        public static BlockAvailabilityInputDtoLanguage EnGb = new("EN_GB");
        public static BlockAvailabilityInputDtoLanguage EnUs = new("EN_US");
        public static BlockAvailabilityInputDtoLanguage Es = new("ES");
        public static BlockAvailabilityInputDtoLanguage EsAr = new("ES_AR");
        public static BlockAvailabilityInputDtoLanguage EsMx = new("ES_MX");
        public static BlockAvailabilityInputDtoLanguage Et = new("ET");
        public static BlockAvailabilityInputDtoLanguage Fi = new("FI");
        public static BlockAvailabilityInputDtoLanguage Fr = new("FR");
        public static BlockAvailabilityInputDtoLanguage He = new("HE");
        public static BlockAvailabilityInputDtoLanguage Hi = new("HI");
        public static BlockAvailabilityInputDtoLanguage Hr = new("HR");
        public static BlockAvailabilityInputDtoLanguage Hu = new("HU");
        public static BlockAvailabilityInputDtoLanguage Id = new("ID");
        public static BlockAvailabilityInputDtoLanguage Is_ = new("IS");
        public static BlockAvailabilityInputDtoLanguage It = new("IT");
        public static BlockAvailabilityInputDtoLanguage Ja = new("JA");
        public static BlockAvailabilityInputDtoLanguage Ka = new("KA");
        public static BlockAvailabilityInputDtoLanguage Ko = new("KO");
        public static BlockAvailabilityInputDtoLanguage Lt = new("LT");
        public static BlockAvailabilityInputDtoLanguage Lv = new("LV");
        public static BlockAvailabilityInputDtoLanguage Ms = new("MS");
        public static BlockAvailabilityInputDtoLanguage Nl = new("NL");
        public static BlockAvailabilityInputDtoLanguage No = new("NO");
        public static BlockAvailabilityInputDtoLanguage Pl = new("PL");
        public static BlockAvailabilityInputDtoLanguage PtBr = new("PT_BR");
        public static BlockAvailabilityInputDtoLanguage PtPt = new("PT_PT");
        public static BlockAvailabilityInputDtoLanguage Ro = new("RO");
        public static BlockAvailabilityInputDtoLanguage Ru = new("RU");
        public static BlockAvailabilityInputDtoLanguage Sk = new("SK");
        public static BlockAvailabilityInputDtoLanguage Sl = new("SL");
        public static BlockAvailabilityInputDtoLanguage Sr = new("SR");
        public static BlockAvailabilityInputDtoLanguage Sv = new("SV");
        public static BlockAvailabilityInputDtoLanguage Th = new("TH");
        public static BlockAvailabilityInputDtoLanguage Tl = new("TL");
        public static BlockAvailabilityInputDtoLanguage Tr = new("TR");
        public static BlockAvailabilityInputDtoLanguage Uk = new("UK");
        public static BlockAvailabilityInputDtoLanguage Vi = new("VI");
        public static BlockAvailabilityInputDtoLanguage ZhCn = new("ZH_CN");
        public static BlockAvailabilityInputDtoLanguage ZhTw = new("ZH_TW");
    }

    /// <summary>The user's platform.</summary>
    public record BlockAvailabilityInputDtoUserPlatform : ValueEnum<string>
    {
        internal BlockAvailabilityInputDtoUserPlatform(string value)
            : base(value) { }

        public BlockAvailabilityInputDtoUserPlatform()
            : base("ANDROID") { }

        public static BlockAvailabilityInputDtoUserPlatform Android = new("ANDROID");
        public static BlockAvailabilityInputDtoUserPlatform Desktop = new("DESKTOP");
        public static BlockAvailabilityInputDtoUserPlatform Ios = new("IOS");
        public static BlockAvailabilityInputDtoUserPlatform Mobile = new("MOBILE");
        public static BlockAvailabilityInputDtoUserPlatform Tablet = new("TABLET");
    }
}
