// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace BookingClient.Models;

/// <summary>All location related information of this accommodation property.</summary>
public record LocationDto(
    /// <value>Translated accommodation address.</value>
    [property:
        JsonPropertyName("address"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        LazyTranslatedString? Address = null,
    /// <value>A signed integer number that uniquely identifies a city.</value>
    [property:
        JsonPropertyName("city"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? City = null,
    /// <value>A signed integer number that uniquely identifies a city.</value>
    [property:
        JsonPropertyName("coordinates"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        CoordinatesDto? Coordinates = null,
    /// <value>
    /// A two-letter code that uniquely identifies a country.
    /// This code is defined by the ISO 3166-1 alpha-2 standard (ISO2) as described here: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
    /// </value>
    [property:
        JsonPropertyName("country"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Country = null,
    /// <value>A signed integer number that uniquely identifies a district. Typically, districts define known areas within a city.</value>
    [property:
        JsonPropertyName("districts"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? Districts = null,
    [property:
        JsonPropertyName("postal_code"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? PostalCode = null,
    /// <value>
    /// A signed integer number that uniquely identifies a geographical region.
    /// Regions usually define official administrative areas within a country,
    /// but may also include multiple countries and in some cases un-official but popular designations for geographical areas.
    /// An example of a region that crosses multiple countries is the Alps in Europe.
    /// </value>
    [property:
        JsonPropertyName("regions"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? Regions = null
);
