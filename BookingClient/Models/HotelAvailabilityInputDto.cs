// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using BookingClient.Json;

namespace BookingClient.Models;

public record HotelAvailabilityInputDto(
    /// <value>The arrival date.</value>
    [property: JsonPropertyName("checkin")]
        string Checkin,
    /// <value>The departure date. Must be later than (checkin). Must be between 1 and 30 days after (checkin).</value>
    [property: JsonPropertyName("checkout")]
        string Checkout,
    /// <value>Guest country code. Used to accurately display the best prices and price details for people from that country.</value>
    [property: JsonPropertyName("guest_country")]
        string GuestCountry,
    /// <value>The only group will be split in the given number of rooms automatically</value>
    [property: JsonPropertyName("no_rooms")]
        long NoRooms,
    /// <value>Limit the result list to up to 1000 specified hotels where they have availability for the specified guests and dates.</value>
    [property:
        JsonPropertyName("hotel_ids"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<long>? HotelIds = null,
    /// <value>Returns the price in this currency</value>
    [property:
        JsonPropertyName("currency"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Currency = null,
    /// <value>The user's platform.</value>
    [property:
        JsonPropertyName("user_platform"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        HotelAvailabilityInputDto.HotelAvailabilityInputDtoUserPlatform? UserPlatform = null,
    /// <value>The maximum number of results to return.</value>
    [property:
        JsonPropertyName("rows"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        long? Rows = null,
    /// <value>Pagination token used to retrieve the next page of results. Obtained from `next_page`.</value>
    [property:
        JsonPropertyName("page"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Page = null
)
{
    /// <summary>The user's platform.</summary>
    public record HotelAvailabilityInputDtoUserPlatform : ValueEnum<string>
    {
        internal HotelAvailabilityInputDtoUserPlatform(string value)
            : base(value) { }

        public HotelAvailabilityInputDtoUserPlatform()
            : base("ANDROID") { }

        public static HotelAvailabilityInputDtoUserPlatform Android = new("ANDROID");
        public static HotelAvailabilityInputDtoUserPlatform Desktop = new("DESKTOP");
        public static HotelAvailabilityInputDtoUserPlatform Ios = new("IOS");
        public static HotelAvailabilityInputDtoUserPlatform Mobile = new("MOBILE");
        public static HotelAvailabilityInputDtoUserPlatform Tablet = new("TABLET");
    }
}
